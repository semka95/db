version: "2.4"

services:
  # backend api built with golang
  backend:
    build: ./backend
    container_name: shortener_management_api
    env_file:
      - ./backend/.env
    ports:
      - 9000:9000
    depends_on:
      otel-collector:
        condition: service_started
      mongodb:
        condition: service_healthy
    links:
      - mongodb
    volumes:
      - ./backend/config.yaml:/app/config.yaml
      - ./backend/private.pem:/app/private.pem

  # mongodb is our primary data store
  mongodb:
    image: mongo:4.4.1-bionic
    container_name: mongodb
    env_file:
      - .env
    volumes:
      - ./mongo-volume:/data/db
    ports:
      - 27017:27017
    healthcheck:
      test: echo 'db.stats().ok' | mongo localhost:27017/admin --quiet
      interval: 5s
      timeout: 5s
      retries: 12
    command: mongod

  # nginx is used for ssl termination
  nginx:
    image: nginx:1.19.3-alpine
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/cert.pem:/etc/nginx/conf.d/cert.pem:ro
      - ./nginx/key.pem:/etc/nginx/conf.d/key.pem:ro
    depends_on:
      - frontend
      - backend

  # frontend
  frontend:
    image: nginx:1.19.3-alpine
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/build:/usr/share/nginx/html
    ports:
      - "3000:3000"

  # Jaeger
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:1.21.0
    ports:
      - "16686:16686"
      - "14250"
    environment:
      - LOG_LEVEL=debug

  # Zipkin
  zipkin-all-in-one:
    image: openzipkin/zipkin:2.22.2
    ports:
      - "9411:9411"

  # Prometheus
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.22.1
    volumes:
      - ./telemetry/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  # Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.43.0
    container_name: otel-collector
    command:
      [
          "--config=/etc/otel-collector-config.yaml",
          "${OTELCOL_ARGS}",
      ]
    volumes:
      - ./telemetry/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1777:1777"   # pprof extension
      - "8887:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317"        # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger-all-in-one
      - zipkin-all-in-one
      - prometheus
    environment:
      - JAEGER_REPORTER_LOG_SPANS=true
